{"version":3,"sources":["services/register.js","history/history.js","redux/userStore.js","components/register/Register.js","services/login.js","components/login/Login.js","services/gamesLobby.js","components/chat/msg.jsx","components/chat/chat.jsx","components/gamesLobby/GameTile.js","components/gamesLobby/GamesLobby.js","components/game/Card.js","services/player.js","components/game/Player.js","components/game/CommunityCards.js","services/playerTurnMenu.js","components/game/PlayerTurnMenu.js","services/gameTable.js","services/leaveButton.js","components/game/GameTable.js","components/game/LeaveButton.js","components/landing/LandingPage.js","App.js","index.js"],"names":["newUserObject","axios","post","then","response","data","createBrowserHistory","initialState","username","userStore","createStore","state","action","type","userObject","Register","useState","setUsername","password","setPassword","repeatPassword","setRepeatPassword","email","setEmail","className","src","id","alt","onSubmit","event","preventDefault","length","alert","registerServices","dispatch","history","push","catch","error","onChange","target","value","placeholder","newLoginObject","Login","loginObject","loginServices","localStorage","setItem","console","log","get","ChatMsg","props","this","msg","Component","socket","io","ChatBox","handleSubmit","userMessage","emit","user","getState","path","window","location","pathname","setState","handleInputChange","chatMsgs","income","perPath","chat","document","getElementById","href","scrollHeight","scrollTop","on","incomeMsg","charAt","toUpperCase","slice","autoComplete","message","GameTile","gameId","players","address","to","GamesLobby","games","setGames","createGame","gamesLobbyServices","getItem","logoutUser","removeItem","useEffect","currentGames","onClick","map","game","key","player_count","Card","card","cardRelativePath","seatId","Player","player","index","setPlayerState","playerServices","isInHand","holeCards","i","chipCount","CommunityCards","cards","currentBettingRound","PlayerTurnMenu","potRaised","playerTurn","handleFold","playerTurnServices","playerIndex","gameid","disconnect","LeaveButton","leaveButtonServices","GameTable","match","gameState","setGameState","params","gameServices","initialGameState","pot_amount","community_cards","betting_round","isRaised","LandingPage","App","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.34fff430.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/users/register'\r\n\r\nconst register = (newUserObject) => {\r\n  const request =  axios.post(baseUrl, newUserObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {register}","import {createBrowserHistory} from 'history'\r\nexport default createBrowserHistory()","import {createStore} from 'redux'\r\n\r\nconst initialState = {\r\n  username: '',\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_USER': \r\n      const userObject = {\r\n        ...state,\r\n        username: action.data.username,\r\n      }\r\n      return userObject\r\n    case 'LOGOUT_USER': \r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst userStore = createStore(userReducer)\r\n\r\nexport default userStore","import React, {useState} from 'react'\r\nimport registerServices from '../../services/register'\r\nimport history from '../../history/history'\r\nimport userStore from '../../redux/userStore'\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [repeatPassword, setRepeatPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value)\r\n  }\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  const handleRepeatPasswordChange = (event) => {\r\n    setRepeatPassword(event.target.value)\r\n  }\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value)\r\n  }\r\n\r\n  const submitNewUser = (event) => {\r\n    event.preventDefault()\r\n\r\n    if(username.length === 0 || password.length === 0 || email.length === 0) {\r\n      alert('Make sure you\\'ve filled in all of the fields')\r\n    } else if (password !== repeatPassword) {\r\n      alert('Your passwords don\\'t match')\r\n    } else {\r\n      const newUserObject = {\r\n        username: username,\r\n        password: password,\r\n        email: email,\r\n      }\r\n      registerServices\r\n        .register(newUserObject)\r\n        .then(() => {\r\n          userStore.dispatch({\r\n            type: 'LOGIN_USER',\r\n            data: {\r\n              username: newUserObject.username\r\n            }\r\n          })\r\n          history.push('/gameslobby')\r\n        })\r\n        .catch(error => {\r\n          history.push('/register')\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-input\">\r\n      <img src='mainLogo.png' id='register-logo' alt='Logo for puppy poker' />\r\n      <form onSubmit={submitNewUser}>\r\n        <input type='text' onChange={handleUsernameChange} placeholder='Username' value={username}/><br />\r\n        <input type='password' onChange={handlePasswordChange} placeholder='Password' value={password}/><br />\r\n        <input type='password' onChange={handleRepeatPasswordChange} placeholder='Password' value={repeatPassword}/><br />\r\n        <input type=\"email\" onChange={handleEmailChange} placeholder='Email' value={email}/><br />\r\n        <input type='submit' value='Register'/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register","import axios from 'axios'\r\nconst baseUrl = 'users/login'\r\n\r\nconst login = (newLoginObject) => {\r\n  const request =  axios.post(baseUrl, newLoginObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {login}","import React, {useState} from 'react'\r\nimport loginServices from '../../services/login'\r\nimport history from '../../history/history'\r\nimport userStore from '../../redux/userStore'\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value)\r\n  }\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  const submitForm = (event) => {\r\n    event.preventDefault()\r\n    if(username.length === 0 || password.length === 0) {\r\n      alert('Please enter your username and password.')\r\n    } else {\r\n      const loginObject = {\r\n        username: username,\r\n        password: password,\r\n      }\r\n      loginServices\r\n        .login(loginObject)\r\n        .then(() => {\r\n          userStore.dispatch({\r\n            type: 'LOGIN_USER',\r\n            data: {\r\n              username: loginObject.username\r\n            }\r\n          })\r\n          localStorage.setItem('username', loginObject.username)\r\n          history.push('/gameslobby')\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-input\">\r\n      <img src='mainLogo.png' id='login-logo' alt='Logo for puppy poker' />\r\n      <form onSubmit={submitForm}>\r\n        <input type='text' value={username} onChange={handleUsernameChange} placeholder=\"Username\" /><br/>\r\n        <input type='password' value={password} onChange={handlePasswordChange} placeholder=\"Password\" /><br />\r\n        <input type='submit' value='Login' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import axios from 'axios'\r\n\r\nconst getAllGames = () => {\r\n  const request =  axios.get('gameslobby/allGames')\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst createNewGame = (username) => {\r\n  const request = axios.post(`gameslobby/${username}/createGame`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAllGames, createNewGame}\r\n","import React, { Component } from 'react';\r\nimport './msg.css'\r\n\r\nclass ChatMsg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {}    \r\n      }\r\n      \r\n    render() { \r\n        return (\r\n        <div className='msgWrapper'>   \r\n            <span id='name'>{this.props.username + ':'}</span>\r\n            <div id='text'>\r\n                {' ' + this.props.msg}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ChatMsg;","import React, { Component } from 'react';\r\nimport ChatMsg from './msg'\r\nimport './chat.css'\r\nimport userStore from '../../redux/userStore'\r\nimport io from 'socket.io-client';\r\n\r\n\r\nconst socket = io();\r\n\r\n\r\n\r\n\r\nclass ChatBox extends Component {\r\n    \r\n    constructor(props){\r\n        let messages = [];\r\n        super(props);\r\n        this.state = {\r\n            chatMsgs: messages,\r\n            userMessage: '',\r\n            income: 0,\r\n            path: '',\r\n            perPath: ''\r\n        }\r\n       this.chat = 'none';\r\n    }\r\n\r\n   \r\n\r\n    //SW - this is where the new message component get created, you will be able to update the username and msg property \r\n    //to alter the chatMsg component\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.userMessage.length !== 0)\r\n        {\r\n            socket.emit('income-msg',{msg: this.state.userMessage, user: userStore.getState().username, path: window.location.pathname});\r\n            this.setState({\r\n                userMessage: ''\r\n            });\r\n        }\r\n    }\r\n    \r\n    //SW - this function updated the userMessage when the form get updated \r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            userMessage: event.target.value\r\n        });\r\n        //console.log(this.state.userMessage)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.chat = document.getElementById('chat');\r\n        console.log(window.location.href)\r\n        console.log(window.location.pathname)\r\n        if(window.location.pathname === '/gameslobby'){\r\n    \r\n        socket.emit('join',window.location.pathname)\r\n        }else{\r\n        socket.emit('leaveRoom', ({path: '/gameslobby'}))    \r\n        socket.emit('join',window.location.pathname)    \r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n       \r\n        if(this.chat.scrollHeight !== null)\r\n        {\r\n            this.chat.scrollTop = this.chat.scrollHeight;\r\n        }\r\n        \r\n    }\r\n\r\n    componentWillMount(){\r\n        socket.on('chat',({incomeMsg, user})=>{\r\n            this.state.chatMsgs.push(<ChatMsg username={user.charAt(0).toUpperCase() + user.slice(1)} msg={incomeMsg}></ChatMsg>);\r\n            this.setState({\r\n                income: 1\r\n            });\r\n        })\r\n    }\r\n\r\n  \r\n\r\n    render() { \r\n\r\n        \r\n        return (\r\n        <div  className='wrapper'>\r\n            <div className='content'>\r\n                <div id='chat-container'>\r\n                    <div id='chat'>\r\n                        {this.state.chatMsgs}\r\n                    </div>\r\n                    <form id='chatForm' onSubmit={this.handleSubmit} autoComplete='off'>\r\n                        <input type='text' className='chat-input'placeholder='message' message='userMessage' value={this.state.userMessage} onChange={this.handleInputChange} ></input>\r\n                    </form>\r\n                    {this.state.chatMsgs}\r\n                </div>\r\n                \r\n            </div>  \r\n        </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n \r\nexport default ChatBox;\r\n\r\n\r\nexport function leaveRoom(){\r\n\r\n    socket.emit('leaveRoom', ({path: window.location.pathname }))\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst GameTile = ({gameId, players}) => {\r\n  const address = `gameslobby/${gameId}`\r\n\r\n  return (\r\n    <div className='game-tile'>\r\n      Game:{gameId} Players: {players}/9 <Link to={address}>Join</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameTile","import React, {useState, useEffect} from 'react'\r\nimport gamesLobbyServices from '../../services/gamesLobby'\r\nimport history from '../../history/history'\r\nimport {Link} from 'react-router-dom'\r\nimport './gamesLobby.css'\r\nimport ChatBox from '../chat/chat.jsx'\r\nimport userStore from '../../redux/userStore'\r\nimport GameTile from './GameTile'\r\n\r\n\r\n\r\nconst GamesLobby = () => {\r\n  const [games, setGames] = useState(null)\r\n\r\n  const createGame = () => {\r\n    gamesLobbyServices\r\n    .createNewGame(userStore.getState().username)\r\n    .then(gameId => {\r\n      history.push(`/gameslobby/${gameId}`)\r\n    })\r\n  }\r\n\r\n  console.log(localStorage.getItem('username'))\r\n\r\n  const logoutUser = () => {\r\n    userStore.dispatch({type: 'LOGOUT_USER'})\r\n    localStorage.removeItem('username')\r\n    history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    /*if(userStore.getState().username === '') {\r\n      history.push('/login')\r\n    }*/\r\n    \r\n    gamesLobbyServices\r\n      .getAllGames()\r\n      .then(currentGames => {\r\n          setGames(currentGames)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n\r\n  if(games === null) {\r\n    return (\r\n      <>\r\n        <button onClick={createGame}>Create Game</button>\r\n        <button onClick={logoutUser}>Logout</button>\r\n        <h2>Loading...</h2>\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='gameslobby-container'>\r\n        <div id='gameslobby-user-menu'>\r\n          \r\n        </div>\r\n        <div className='chat-container'>\r\n          <ChatBox />\r\n        </div>\r\n        <div className='gameslobby-games-tiles'>\r\n          <h2>Welcome {localStorage.getItem('username')}!</h2>\r\n          <button onClick={createGame}>Create Game</button>\r\n          <button onClick={logoutUser}>Logout</button>\r\n          <h2>Active Games</h2>\r\n          {games.map(game =><GameTile key={game.id} gameId={game.id} players={game.player_count} /> )} \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n \r\n}\r\nconst gameBoxes =() =>{\r\n  return(\r\n    <div>\r\n    <div className='game-tiles'>\r\n      <form>\r\n      <input type=\"submit\" value=\"Enter Game\" title=\"Enter Game\" className='enter-game-button'></input>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst userBox = () =>{\r\n  const handleLogout = () => {\r\n    userStore.dispatch({type: 'LOGOUT_USER'})\r\n    history.push('/')\r\n  }\r\n\r\n  const createNewGame = () => {\r\n    gamesLobbyServices\r\n      .createNewGame()\r\n      .then(() => {\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        history.push('/gameslobby')\r\n      })\r\n  }\r\n\r\n  return(\r\n      <div>\r\n        <div className='lobby-username'>\r\n          <h2>{userStore.getState().username}</h2>\r\n        </div>\r\n          <div className='winnings'>\r\n            <h4>Winnings:</h4>\r\n          </div>\r\n\r\n        <div className='userInfo'>\r\n          <img src='./profileIcon.png' id=\"profile-logo\" />\r\n          <button type=\"button\" className='log-out' onClick={handleLogout}>Log Out</button><br/>\r\n          <button type=\"button\" className='create-game' onClick={createNewGame}>Create Game</button><br/>\r\n        </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default GamesLobby","import React from 'react'\r\n\r\nconst Card = ({card}) => {\r\n  const cardRelativePath = `resources/${card}.png`\r\n  return (\r\n    <img src={cardRelativePath} alt=\"This players hole card\" id=\"hole-card\" />\r\n  )\r\n}\r\n\r\nexport default Card","import axios from 'axios'\r\nimport userStore from '../redux/userStore'\r\n\r\nconst joinGame = (gameId, seatId) => {\r\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/${seatId}/join`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {joinGame}","import React, {useState, useEffect} from 'react'\r\nimport Card from './Card'\r\nimport playerServices from '../../services/player'\r\n\r\nconst Player = ({player, index, gameId}) => {\r\n  const [playerState, setPlayerState] = useState(player)\r\n  \r\n  const joinGame = () => {\r\n    playerServices\r\n    .joinGame(gameId, index)\r\n    .then(() => {\r\n      console.log('successful join')\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(player)\r\n    setPlayerState(player)\r\n  }, [player])\r\n\r\n  console.log(player)\r\n\r\n  if(player.username === null) {\r\n    return(\r\n      <div id={`player${index}`}>\r\n        <button className=\"join-button\" onClick={joinGame}>Join Game</button>\r\n      </div>\r\n    )\r\n  } else if (player.isInHand && player.username === localStorage.getItem('username')) {\r\n    return (\r\n      <div className=\"player\" id={`player${index}`}>\r\n        <div id=\"card\">\r\n          {player.holeCards.map((card, i) => <Card key={i} card={card} />)}\r\n        </div>\r\n        <div className=\"play-text-info\">\r\n          <div>\r\n            {player.username}\r\n          </div>\r\n          <div>\r\n            Chips: {player.chipCount}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else if (player.isInHand) {\r\n    return (\r\n      <div className=\"player\" id={`player${index}`}>\r\n        <div id=\"card\">\r\n          {player.holeCards.map((card, i) => <img src='gameslobby/resources/backOfCard.png' id='hole-card'/>)}\r\n        </div>\r\n        <div className=\"play-text-info\">\r\n          <div>\r\n            {player.username}\r\n          </div>\r\n          <div>\r\n            Chips: {player.chipCount}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n    } else {\r\n    return (\r\n      <div className=\"not-in-hand\" id={`player${index}`}>\r\n        <div className=\"play-text-info\">\r\n          <div>\r\n            {player.username}\r\n          </div>\r\n          <div>\r\n            Chips: {player.chipCount}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Player","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CommunityCards = ({cards, currentBettingRound}) => {\r\n  if(currentBettingRound === 3) {\r\n    return (\r\n      <div id=\"community-cards\">\r\n        {cards.map((card, i) => <Card key={i} card={card} />)}\r\n      </div>\r\n    )\r\n  } else if(currentBettingRound === 2) {\r\n    return (\r\n      <div id=\"community-cards\">\r\n        <Card card={cards[0]} />\r\n        <Card card={cards[1]} />\r\n        <Card card={cards[2]} />\r\n        <Card card={cards[3]} />\r\n      </div>\r\n    ) \r\n  } else if(currentBettingRound === 1) {\r\n      return (\r\n        <div id=\"community-cards\">\r\n          <Card card={cards[0]} />\r\n          <Card card={cards[1]} />\r\n          <Card card={cards[2]} />\r\n        </div>\r\n      )\r\n  } else {\r\n    return (\r\n      <div id=\"community-cards\"></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommunityCards","import axios from 'axios'\r\nimport userStore from '../redux/userStore'\r\n\r\nconst check = (gameId) => {\r\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/check`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst bet = (gameId) => {\r\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/bet`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst raise = (gameId) => {\r\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/raise`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst call = (gameId) => {\r\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/call`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst fold = (gameId) => {\r\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/fold`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {check, bet, raise, call, fold}","import React from 'react'\r\nimport playerTurnServices from '../../services/playerTurnMenu'\r\n\r\nconst PlayerTurnMenu = ({potRaised, playerTurn, gameId}) => {\r\n  const handleCheck = () => {\r\n    playerTurnServices\r\n      .check(gameId)\r\n      .then(() => {\r\n        console.log('player checked')\r\n      })\r\n      .catch(() => {\r\n        console.log('player checked')\r\n      })\r\n  }\r\n  \r\n  const handleBet = () => {\r\n    playerTurnServices\r\n    .bet(gameId)\r\n    .then(() => {\r\n      console.log('player bet')\r\n    })\r\n    .catch(() => {\r\n      console.log('player bet')\r\n    })\r\n  }\r\n\r\n  const handleCall = () => {\r\n    playerTurnServices\r\n    .call(gameId)\r\n    .then(() => {\r\n      console.log('player call')\r\n    })\r\n    .catch(() => {\r\n      console.log('player call')\r\n    })\r\n  }\r\n\r\n  const handleRaise = () => {\r\n    playerTurnServices\r\n    .raise(gameId)\r\n    .then(() => {\r\n      console.log('player raise')\r\n    })\r\n    .catch(() => {\r\n      console.log('player raise')\r\n    })\r\n  }\r\n\r\n  const handleFold = () => {\r\n    playerTurnServices\r\n    .fold(gameId)\r\n    .then(() => {\r\n      console.log('player fold')\r\n    })\r\n    .catch(() => {\r\n      console.log('player fold')\r\n    })\r\n  }\r\n\r\n\r\n  if(!potRaised){\r\n    return (\r\n      <div className=\"player-turn-menu\">\r\n        <button onClick={handleCall}>Call</button>\r\n        <button onClick={handleRaise}>Raise</button>\r\n        <button onClick={handleFold}>Fold</button>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"player-turn-menu\">\r\n        <button onClick={handleCheck}>Check</button>\r\n        <button onClick={handleBet}>Bet</button>\r\n        <button onClick={handleFold}>Fold</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlayerTurnMenu","import axios from 'axios'\r\n\r\nconst getGameState = (gameId) => {\r\n  const request =  axios.get(`${gameId}/getGame`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getGameState}","import axios from 'axios'\r\nimport history from '../history/history'\r\nimport io from 'socket.io-client'\r\nimport {leaveRoom} from '../../src/components/chat/chat.jsx'\r\nimport {leaveGameRoom} from '../components/game/GameTable'\r\n\r\n\r\nconst leaveGame = (gameId, username, playerIndex) => {\r\n  const socket = io()\r\n  axios.post(`${gameId}/${username}/leave`)\r\n  .then(response => {\r\n    leaveGameRoom(gameId)\r\n    leaveRoom();\r\n\r\n    socket.disconnect()\r\n\r\n    history.push('/gameslobby')\r\n  })\r\n  .catch(error => {\r\n    history.push('/gameslobby')\r\n    console.log(error)\r\n  })\r\n}\r\n\r\nexport default {leaveGame}","import React, {useState, useEffect} from 'react'\r\nimport Player from './Player'\r\nimport CommunityCards from './CommunityCards'\r\nimport gameobject from '../../GameObject'\r\nimport PlayerTurnMenu from './PlayerTurnMenu'\r\nimport gameServices from '../../services/gameTable'\r\nimport io from 'socket.io-client';\r\nimport LeaveButton from './LeaveButton'\r\nimport userStore from '../../redux/userStore'\r\nimport ChatBox from '../chat/chat.jsx'\r\nconst socket = io()\r\n\r\n\r\nconst GameTable = ({match}) => {\r\n  const [gameState, setGameState] = useState(null)\r\n  const gameId = match.params.id\r\n\r\n  socket.emit('join',gameId)\r\n  \r\n  socket.on('gameState',(data) => {\r\n    setGameState(data)\r\n  })\r\n  \r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n    gameServices\r\n    .getGameState(gameId)\r\n    .then(initialGameState => {\r\n      setGameState(initialGameState)\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  },[])\r\n\r\n  if(gameState === null){\r\n    return (\r\n      <div><h2>Loading...</h2></div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div id=\"table\">\r\n        <h2>{gameState.pot_amount}</h2>\r\n        <LeaveButton gameId={gameId} username={userStore.getState().username} playerIndex='1' />\r\n        {gameState.players.map((player, index) => <Player key={player.username} player={player} index={index} gameId={gameId} />)}\r\n        <CommunityCards cards={gameState.community_cards} currentBettingRound={gameState.betting_round} />\r\n        <PlayerTurnMenu isRaised={gameState.isRaised} gameId={gameId} />\r\n        <ChatBox />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameTable\r\n\r\nexport function leaveGameRoom(gameid){\r\n\r\n  socket.emit('leaveRoom', ({path: gameid }))\r\n\r\n}\r\n","import React from 'react'\r\nimport history from '../../history/history'\r\nimport leaveButtonServices from '../../services/leaveButton'\r\n\r\nconst LeaveButton = ({gameId, username}) => {\r\n\r\n  const handleLeaveGame = () => {\r\n    leaveButtonServices.leaveGame(gameId, username)\r\n  }\r\n\r\n  return (\r\n    <button id='leave-button' onClick={handleLeaveGame}>Leave Game</button>\r\n  )\r\n}\r\n\r\nexport default LeaveButton","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nconst LandingPage = () => {\r\n  return (\r\n    <div id=\"landing-page\">\r\n      <img src='mainLogo.png' id=\"main-logo\" alt='Logo for puppy poker' />\r\n      <Link to='/login'><button id=\"login\" className=\"landing-button\">Login</button></Link>\r\n      <Link to='/register'><button id=\"register\" className=\"landing-button\">Register</button></Link>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default LandingPage","import React from 'react'\r\nimport Register from './components/register/Register'\r\nimport Login from './components/login/Login'\r\nimport GamesLobby from './components/gamesLobby/GamesLobby'\r\nimport GameTable from './components/game/GameTable'\r\nimport LandingPage from './components/landing/LandingPage'\r\nimport {Router, Switch, Route} from 'react-router-dom'\r\nimport history from './history/history'\r\nimport userStore from './redux/userStore'\r\nimport './App.css'\r\n\r\n//Amir \r\nimport chat from './components/chat/chat'\r\n\r\nconst App = () => {\r\n\r\n  if(localStorage.getItem('username')){\r\n    userStore.dispatch({\r\n      type: 'LOGIN_USER',\r\n      data: {\r\n        username: localStorage.getItem('username')\r\n      }\r\n    })\r\n    history.push('/gameslobby')\r\n  }\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div id=\"app\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LandingPage} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/gameslobby\" exact component={GamesLobby} />\r\n          <Route path=\"/gameslobby/:id\" component={GameTable} />\r\n          <Route path=\"/chat\" component={chat} />\r\n        </Switch>\r\n        \r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './App.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}