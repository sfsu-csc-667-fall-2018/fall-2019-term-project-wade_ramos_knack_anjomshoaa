{"version":3,"sources":["services/register.js","history/history.js","redux/userStore.js","components/register/Register.js","services/login.js","components/login/Login.js","services/gamesLobby.js","components/chat/msg.jsx","components/chat/chat.jsx","components/gamesLobby/GameTile.js","components/gamesLobby/GamesLobby.js","components/game/Card.js","services/player.js","components/game/Player.js","components/game/CommunityCards.js","services/playerTurnMenu.js","components/game/PlayerTurnMenu.js","services/gameTable.js","services/leaveButton.js","components/game/GameTable.js","components/game/LeaveButton.js","components/landing/LandingPage.js","App.js","index.js"],"names":["newUserObject","axios","post","then","response","data","createBrowserHistory","initialState","username","userStore","createStore","state","action","type","userObject","Register","useState","setUsername","password","setPassword","repeatPassword","setRepeatPassword","email","setEmail","className","src","id","alt","onSubmit","event","preventDefault","length","alert","registerServices","dispatch","history","push","catch","error","onChange","target","value","placeholder","newLoginObject","Login","loginObject","loginServices","localStorage","setItem","console","log","get","ChatMsg","props","this","msg","Component","socket","io","ChatBox","chatClass","handleSubmit","userMessage","emit","user","getState","path","window","location","pathname","setState","handleInputChange","chatMsgs","income","perPath","chatclass","chat","document","getElementById","href","scrollHeight","scrollTop","on","incomeMsg","charAt","toUpperCase","slice","autoComplete","message","GameTile","gameId","players","address","to","GamesLobby","games","setGames","createGame","gamesLobbyServices","getItem","logoutUser","removeItem","useEffect","currentGames","onClick","map","game","key","player_count","Card","card","cardRelativePath","seatId","Player","player","index","isInHand","holeCards","i","chipCount","playerServices","CommunityCards","cards","currentBettingRound","PlayerTurnMenu","isRaised","playerTurn","handleFold","playerTurnServices","playerIndex","gameid","disconnect","LeaveButton","leaveButtonServices","GameTable","match","gameState","setGameState","params","gameServices","initialGameState","betting_round","findIndex","pot_amount","community_cards","last_raised","current_player","LandingPage","App","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.a8dae7b0.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/users/register'\n\nconst register = (newUserObject) => {\n  const request =  axios.post(baseUrl, newUserObject)\n  return request.then(response => response.data)\n}\n\nexport default {register}","import {createBrowserHistory} from 'history'\nexport default createBrowserHistory()","import {createStore} from 'redux'\n\nconst initialState = {\n  username: '',\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_USER': \n      const userObject = {\n        ...state,\n        username: action.data.username,\n      }\n      return userObject\n    case 'LOGOUT_USER': \n      return initialState\n    default:\n      return state\n  }\n}\n\nconst userStore = createStore(userReducer)\n\nexport default userStore","import React, {useState} from 'react'\nimport registerServices from '../../services/register'\nimport history from '../../history/history'\nimport userStore from '../../redux/userStore'\n\nconst Register = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [repeatPassword, setRepeatPassword] = useState('')\n  const [email, setEmail] = useState('')\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleRepeatPasswordChange = (event) => {\n    setRepeatPassword(event.target.value)\n  }\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value)\n  }\n\n  const submitNewUser = (event) => {\n    event.preventDefault()\n\n    if(username.length === 0 || password.length === 0 || email.length === 0) {\n      alert('Make sure you\\'ve filled in all of the fields')\n    } else if (password !== repeatPassword) {\n      alert('Your passwords don\\'t match')\n    } else {\n      const newUserObject = {\n        username: username,\n        password: password,\n        email: email,\n      }\n      registerServices\n        .register(newUserObject)\n        .then(() => {\n          userStore.dispatch({\n            type: 'LOGIN_USER',\n            data: {\n              username: newUserObject.username\n            }\n          })\n          history.push('/gameslobby')\n        })\n        .catch(error => {\n          history.push('/register')\n        })\n    }\n  }\n\n  return (\n    <div className=\"user-input\">\n      <img src='mainLogo.png' id='register-logo' alt='Logo for puppy poker' />\n      <form onSubmit={submitNewUser}>\n        <input type='text' onChange={handleUsernameChange} placeholder='Username' value={username}/><br />\n        <input type='password' onChange={handlePasswordChange} placeholder='Password' value={password}/><br />\n        <input type='password' onChange={handleRepeatPasswordChange} placeholder='Password' value={repeatPassword}/><br />\n        <input type=\"email\" onChange={handleEmailChange} placeholder='Email' value={email}/><br />\n        <input type='submit' value='Register'/>\n      </form>\n    </div>\n  )\n}\n\nexport default Register","import axios from 'axios'\nconst baseUrl = 'users/login'\n\nconst login = (newLoginObject) => {\n  const request =  axios.post(baseUrl, newLoginObject)\n  return request.then(response => response.data)\n}\n\nexport default {login}","import React, {useState} from 'react'\nimport loginServices from '../../services/login'\nimport history from '../../history/history'\nimport userStore from '../../redux/userStore'\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    if(username.length === 0 || password.length === 0) {\n      alert('Please enter your username and password.')\n    } else {\n      const loginObject = {\n        username: username,\n        password: password,\n      }\n      loginServices\n        .login(loginObject)\n        .then(() => {\n          userStore.dispatch({\n            type: 'LOGIN_USER',\n            data: {\n              username: loginObject.username\n            }\n          })\n          localStorage.setItem('username', loginObject.username)\n          history.push('/gameslobby')\n        })\n        .catch(error => {\n          console.log(error)\n        })\n      }\n  }\n\n  return (\n    <div className=\"user-input\">\n      <img src='mainLogo.png' id='login-logo' alt='Logo for puppy poker' />\n      <form onSubmit={submitForm}>\n        <input type='text' value={username} onChange={handleUsernameChange} placeholder=\"Username\" /><br/>\n        <input type='password' value={password} onChange={handlePasswordChange} placeholder=\"Password\" /><br />\n        <input type='submit' value='Login' />\n      </form>\n    </div>\n  )\n}\n\nexport default Login","import axios from 'axios'\n\nconst getAllGames = () => {\n  const request =  axios.get('gameslobby/allGames')\n  return request.then(response => response.data)\n}\n\nconst createNewGame = (username) => {\n  const request = axios.post(`gameslobby/${username}/createGame`)\n  return request.then(response => response.data)\n}\n\nexport default {getAllGames, createNewGame}\n","import React, { Component } from 'react';\nimport './msg.css'\n\nclass ChatMsg extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {}    \n      }\n      \n    render() { \n        return (\n        <div className='msgWrapper'>   \n            <span id='name'>{this.props.username + ':'}</span>\n            <div id='text'>\n                {' ' + this.props.msg}\n            </div>\n        </div>\n        );\n    }\n}\n \nexport default ChatMsg;","import React, { Component } from 'react';\nimport ChatMsg from './msg'\nimport './chat.css'\nimport userStore from '../../redux/userStore'\nimport io from 'socket.io-client';\n\n\nconst socket = io();\n\n\n\n\nclass ChatBox extends Component {\n    \n    constructor(props){\n        let messages = [];\n        console.log(\"Props\", props.chatClass)\n        \n        super(props);\n\n        this.state = {\n            chatMsgs: messages,\n            userMessage: '',\n            income: 0,\n            path: '',\n            perPath: '',\n            chatclass: props.chatClass\n        }\n       this.chat = 'none';\n    }\n\n   \n\n    //SW - this is where the new message component get created, you will be able to update the username and msg property \n    //to alter the chatMsg component\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if(this.state.userMessage.length !== 0)\n        {\n            socket.emit('income-msg',{msg: this.state.userMessage, user: userStore.getState().username, path: window.location.pathname});\n            this.setState({\n                userMessage: ''\n            });\n        }\n    }\n    \n    //SW - this function updated the userMessage when the form get updated \n    handleInputChange = (event) => {\n        event.preventDefault();\n        this.setState({\n            userMessage: event.target.value\n        });\n        //console.log(this.state.userMessage)\n    }\n\n    componentDidMount() {\n        this.chat = document.getElementById('chat');\n        console.log(window.location.href)\n        console.log(window.location.pathname)\n        if(window.location.pathname === '/gameslobby'){\n         \n    \n        socket.emit('join',window.location.pathname)\n        }else{\n            \n        socket.emit('leaveRoom', ({path: '/gameslobby'}))    \n        socket.emit('join',window.location.pathname)    \n        }\n    }\n\n    componentDidUpdate() {\n       \n        if(this.chat.scrollHeight !== null)\n        {\n            this.chat.scrollTop = this.chat.scrollHeight;\n        }\n        \n    }\n\n    componentWillMount(){\n        socket.on('chat',({incomeMsg, user})=>{\n            this.state.chatMsgs.push(<ChatMsg username={user.charAt(0).toUpperCase() + user.slice(1)} msg={incomeMsg}></ChatMsg>);\n            this.setState({\n                income: 1\n            });\n        })\n    }\n\n  \n\n    render() { \n        if(this.state.chatclass === 'lobby'){\n            \n            return (\n                <div  className='wrapper'>\n                    <div className='content'>\n                        <div id='chat-container'>\n                            <div id='chat'>\n                                {this.state.chatMsgs}\n                            </div>\n                            <form id='chatForm' onSubmit={this.handleSubmit} autoComplete='off'>\n                                <input type='text' className='chat-input'placeholder='message' message='userMessage' value={this.state.userMessage} onChange={this.handleInputChange} ></input>\n                            </form>\n                            {this.state.chatMsgs}\n                        </div>\n                        \n                    </div>  \n                </div>\n                \n                );\n        } else {\n        \n        return (\n        <div  className='wrapper1'>\n            <div className='content1'>\n                <div id='chat-container1'>\n                    <div id='chat'>\n                        {this.state.chatMsgs}\n                    </div>\n                    <form id='chatForm' onSubmit={this.handleSubmit} autoComplete='off'>\n                        <input type='text' className='chat-input1'placeholder='message' message='userMessage' value={this.state.userMessage} onChange={this.handleInputChange} ></input>\n                    </form>\n                    {this.state.chatMsgs}\n                </div>\n                \n            </div>  \n        </div>\n        \n        );\n    }}\n}\n\n \nexport default ChatBox;\n\n\nexport function leaveRoom(){\n\n    socket.emit('leaveRoom', ({path: window.location.pathname }))\n\n}\n\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst GameTile = ({gameId, players}) => {\n  const address = `gameslobby/${gameId}`\n\n  return (\n    <div className='game-tile'>\n      Game:{gameId} Players: {players}/9 <Link to={address}>Join</Link>\n    </div>\n  )\n}\n\nexport default GameTile","import React, {useState, useEffect} from 'react'\nimport gamesLobbyServices from '../../services/gamesLobby'\nimport history from '../../history/history'\nimport {Link} from 'react-router-dom'\nimport './gamesLobby.css'\nimport ChatBox from '../chat/chat.jsx'\nimport userStore from '../../redux/userStore'\nimport GameTile from './GameTile'\n\n\n\nconst GamesLobby = () => {\n  const [games, setGames] = useState(null)\n\n  const createGame = () => {\n    gamesLobbyServices\n    .createNewGame(userStore.getState().username)\n    .then(gameId => {\n      history.push(`/gameslobby/${gameId}`)\n    })\n  }\n\n  console.log(localStorage.getItem('username'))\n\n  const logoutUser = () => {\n    userStore.dispatch({type: 'LOGOUT_USER'})\n    localStorage.removeItem('username')\n    history.push('/')\n  }\n\n  useEffect(() => {\n    /*if(userStore.getState().username === '') {\n      history.push('/login')\n    }*/\n    \n    gamesLobbyServices\n      .getAllGames()\n      .then(currentGames => {\n          setGames(currentGames)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n\n\n  if(games === null) {\n    return (\n      <>\n        <button onClick={createGame}>Create Game</button>\n        <button onClick={logoutUser}>Logout</button>\n        <h2>Loading...</h2>\n      </>\n    )\n  } else {\n    return (\n      <div className='gameslobby-container'>\n        <div id='gameslobby-user-menu'>\n          \n        </div>\n        <div className='chat-container'>\n          <ChatBox chatClass = \"lobby\" />\n        </div>\n        <div className='gameslobby-games-tiles'>\n          <h2>Welcome {localStorage.getItem('username')}!</h2>\n          <button onClick={createGame}>Create Game</button>\n          <button onClick={logoutUser}>Logout</button>\n          <h2>Active Games</h2>\n          {games.map(game =><GameTile key={game.id} gameId={game.id} players={game.player_count} /> )} \n        </div>\n      </div>\n    )\n  }\n\n \n}\nconst gameBoxes =() =>{\n  return(\n    <div>\n    <div className='game-tiles'>\n      <form>\n      <input type=\"submit\" value=\"Enter Game\" title=\"Enter Game\" className='enter-game-button'></input>\n      </form>\n    </div>\n    </div>\n  )\n}\n\nconst userBox = () =>{\n  const handleLogout = () => {\n    userStore.dispatch({type: 'LOGOUT_USER'})\n    history.push('/')\n  }\n\n  const createNewGame = () => {\n    gamesLobbyServices\n      .createNewGame()\n      .then(() => {\n\n      })\n      .catch(error => {\n        console.log(error)\n        history.push('/gameslobby')\n      })\n  }\n\n  return(\n      <div>\n        <div className='lobby-username'>\n          <h2>{userStore.getState().username}</h2>\n        </div>\n          <div className='winnings'>\n            <h4>Winnings:</h4>\n          </div>\n\n        <div className='userInfo'>\n          <img src='./profileIcon.png' id=\"profile-logo\" />\n          <button type=\"button\" className='log-out' onClick={handleLogout}>Log Out</button><br/>\n          <button type=\"button\" className='create-game' onClick={createNewGame}>Create Game</button><br/>\n        </div>\n        </div>\n  )\n}\n\nexport default GamesLobby","import React from 'react'\n\nconst Card = ({card}) => {\n  const cardRelativePath = `resources/${card}.png`\n  return (\n    <img src={cardRelativePath} alt=\"This players hole card\" id=\"hole-card\" />\n  )\n}\n\nexport default Card","import axios from 'axios'\nimport userStore from '../redux/userStore'\n\nconst joinGame = (gameId, seatId) => {\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/${seatId}/join`)\n  return request.then(response => response.data)\n}\n\nexport default {joinGame}","import React, {useState, useEffect} from 'react'\nimport Card from './Card'\nimport playerServices from '../../services/player'\n\nconst Player = ({player, index, gameId}) => {\n  const joinGame = () => {\n    playerServices\n    .joinGame(gameId, index)\n    .then(() => {\n      \n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  if(player.username !== null && !player.isInHand) {\n    return (\n      <div className=\"not-in-hand\" id={`player${index}`}>\n        <div className=\"play-text-info\">\n          <div>\n            {player.username}\n          </div>\n          <div>\n            Chips: {player.chipCount}\n          </div>\n        </div>\n      </div>\n    )\n  } else if (player.isInHand && player.username === localStorage.getItem('username')) {\n    return (\n      <div className=\"player\" id={`player${index}`}>\n        <div id=\"card\">\n          {player.holeCards.map((card, i) => <Card key={i} card={card} />)}\n        </div>\n        <div className=\"play-text-info\">\n          <div>\n            {player.username}\n          </div>\n          <div>\n            Chips: {player.chipCount}\n          </div>\n        </div>\n      </div>\n    )\n  } else if (player.isInHand) {\n    return (\n      <div className=\"player\" id={`player${index}`}>\n        <div id=\"card\">\n          {player.holeCards.map((card, i) => <img src='gameslobby/resources/backOfCard.png' id='hole-card'/>)}\n        </div>\n        <div className=\"play-text-info\">\n          <div>\n            {player.username}\n          </div>\n          <div>\n            Chips: {player.chipCount}\n          </div>\n        </div>\n      </div>\n    )\n    } else if(player.username === null) {\n      return(\n        <div id={`player${index}`}>\n          <div className=\"join-button\" onClick={joinGame}>Join Game</div>\n        </div>\n      )\n  } else {\n    return (\n      <div></div>\n    )\n  }\n}\n\nexport default Player","import React from 'react'\nimport Card from './Card'\n\nconst CommunityCards = ({cards, currentBettingRound}) => {\n  if(currentBettingRound >= 4) {\n    return (\n      <div id=\"community-cards\">\n        {cards.map((card, i) => <Card key={i} card={card} />)}\n      </div>\n    )\n  } else if(currentBettingRound === 3) {\n    return (\n      <div id=\"community-cards\">\n        <Card card={cards[0]} />\n        <Card card={cards[1]} />\n        <Card card={cards[2]} />\n        <Card card={cards[3]} />\n      </div>\n    ) \n  } else if(currentBettingRound === 2) {\n      return (\n        <div id=\"community-cards\">\n          <Card card={cards[0]} />\n          <Card card={cards[1]} />\n          <Card card={cards[2]} />\n        </div>\n      )\n  } else {\n    return (\n      <div id=\"community-cards\"></div>\n    )\n  }\n}\n\nexport default CommunityCards","import axios from 'axios'\nimport userStore from '../redux/userStore'\n\nconst check = (gameId) => {\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/check`)\n  return request.then(response => response.data)\n}\n\nconst bet = (gameId) => {\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/bet`)\n  return request.then(response => response.data)\n}\n\nconst raise = (gameId) => {\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/raise`)\n  return request.then(response => response.data)\n}\n\nconst call = (gameId) => {\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/call`)\n  return request.then(response => response.data)\n}\n\nconst fold = (gameId) => {\n  const request =  axios.post(`${gameId}/${userStore.getState().username}/fold`)\n  return request.then(response => response.data)\n}\n\nexport default {check, bet, raise, call, fold}","import React from 'react'\nimport playerTurnServices from '../../services/playerTurnMenu'\n\nconst PlayerTurnMenu = ({isRaised, playerTurn, gameId}) => {\n\n  console.log(playerTurn)\n  const handleCheck = () => {\n    playerTurnServices\n      .check(gameId)\n      .then(() => {\n        console.log('player checked')\n      })\n      .catch(() => {\n        console.log('player checked')\n      })\n  }\n  \n  const handleBet = () => {\n    playerTurnServices\n    .bet(gameId)\n    .then(() => {\n      console.log('player bet')\n    })\n    .catch(() => {\n      console.log('player bet')\n    })\n  }\n\n  const handleCall = () => {\n    playerTurnServices\n    .call(gameId)\n    .then(() => {\n      console.log('player call')\n    })\n    .catch(() => {\n      console.log('player call')\n    })\n  }\n\n  const handleRaise = () => {\n    playerTurnServices\n    .raise(gameId)\n    .then(() => {\n      console.log('player raise')\n    })\n    .catch(() => {\n      console.log('player raise')\n    })\n  }\n\n  const handleFold = () => {\n    playerTurnServices\n    .fold(gameId)\n    .then(() => {\n      console.log('player fold')\n    })\n    .catch(() => {\n      console.log('player fold')\n    })\n  }\n\n  console.log('player turn ' + playerTurn)\n  console.log('local storage' + localStorage.getItem('playerposition'))\n\n  if(localStorage.getItem('playerposition') == playerTurn) {\n    console.log('inside conditional')\n    if(isRaised >= 0){\n      return (\n        <div className=\"player-turn-menu\">\n          <button onClick={handleCall}>Call</button>\n          <button onClick={handleRaise}>Raise</button>\n          <button onClick={handleFold}>Fold</button>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"player-turn-menu\">\n          <button onClick={handleCheck}>Check</button>\n          <button onClick={handleBet}>Bet</button>\n          <button onClick={handleFold}>Fold</button>\n        </div>\n      )\n    }\n  } else {\n    return (\n      <div></div>\n    )\n  }\n}\n\nexport default PlayerTurnMenu","import axios from 'axios'\n\nconst getGameState = (gameId) => {\n  const request =  axios.get(`${gameId}/getGame`)\n  return request.then(response => response.data)\n}\n\nconst gameOver = (gameId) => {\n  const request = axios.post(`${gameId}/gameOver`)\n  return request.then(response => response)\n}\n\nexport default {getGameState, gameOver}","import axios from 'axios'\nimport history from '../history/history'\nimport io from 'socket.io-client'\nimport {leaveRoom} from '../../src/components/chat/chat.jsx'\nimport {leaveGameRoom} from '../components/game/GameTable'\n\n\nconst leaveGame = (gameId, username, playerIndex) => {\n  const socket = io()\n  axios.post(`${gameId}/${username}/leave`)\n  .then(response => {\n    leaveGameRoom(gameId)\n    leaveRoom();\n\n    socket.disconnect()\n\n    history.push('/gameslobby')\n  })\n  .catch(error => {\n    history.push('/gameslobby')\n    console.log(error)\n  })\n}\n\nexport default {leaveGame}","import React, {useState, useEffect} from 'react'\nimport Player from './Player'\nimport CommunityCards from './CommunityCards'\nimport gameobject from '../../GameObject'\nimport PlayerTurnMenu from './PlayerTurnMenu'\nimport gameServices from '../../services/gameTable'\nimport io from 'socket.io-client';\nimport LeaveButton from './LeaveButton'\nimport userStore from '../../redux/userStore'\nimport ChatBox from '../chat/chat.jsx'\nconst socket = io()\n\n\nconst GameTable = ({match}) => {\n  const [gameState, setGameState] = useState(null)\n  const gameId = match.params.id\n\n  localStorage.setItem('gameid', gameId)\n\n  socket.emit('join',gameId)\n\n  \n  \n  socket.on('gameState',(data) => {\n    setGameState(data)\n  })\n  \n  useEffect(() => {\n    gameServices\n    .getGameState(gameId)\n    .then(initialGameState => {\n      setGameState(initialGameState)\n      console.log(gameState)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  },[])\n\n  useEffect(() => {\n    if(gameState !== null) {\n      if(gameState.betting_round > 4){\n        if(localStorage.getItem('username') === 'jon'){\n          gameServices.gameOver(gameId)\n        }\n      }\n    }\n  },[gameState])\n\n  if(gameState !== null){\n    localStorage.setItem('playerposition',gameState.players.findIndex(player => player.username === localStorage.getItem('username')))\n  }\n\n  console.log(gameState)\n\n  if(gameState === null){\n    return (\n      <div><h2>Loading...</h2></div>\n    )\n  } else {\n    return (\n      <div id=\"table\">\n        <div id='pot'>Pot: {gameState.pot_amount}</div>\n        <LeaveButton gameId={gameId} username={userStore.getState().username} playerIndex='1' />\n        {gameState.players.map((player, index) => <Player key={player.username} player={player} index={index} gameId={gameId} />)}\n        <CommunityCards cards={gameState.community_cards} currentBettingRound={gameState.betting_round} />\n        <PlayerTurnMenu isRaised={gameState.last_raised} gameId={gameId} playerTurn={gameState.current_player}/>\n        <ChatBox  />\n      </div>\n    )\n  }\n}\n\nexport default GameTable\n\nexport function leaveGameRoom(gameid){\n\n  socket.emit('leaveRoom', ({path: gameid }))\n\n}\n","import React from 'react'\nimport history from '../../history/history'\nimport leaveButtonServices from '../../services/leaveButton'\n\nconst LeaveButton = ({gameId, username}) => {\n\n  const handleLeaveGame = () => {\n    leaveButtonServices.leaveGame(gameId, username)\n    localStorage.removeItem('gameid')\n  }\n\n  return (\n    <button id='leave-button' onClick={handleLeaveGame}>Leave Game</button>\n  )\n}\n\nexport default LeaveButton","import React from 'react'\nimport {Link} from 'react-router-dom'\nconst LandingPage = () => {\n  return (\n    <div id=\"landing-page\">\n      <img src='mainLogo.png' id=\"main-logo\" alt='Logo for puppy poker' />\n      <Link to='/login'><button id=\"login\" className=\"landing-button\">Login</button></Link>\n      <Link to='/register'><button id=\"register\" className=\"landing-button\">Register</button></Link>\n    </div>\n    \n  )\n}\n\nexport default LandingPage","import React from 'react'\nimport Register from './components/register/Register'\nimport Login from './components/login/Login'\nimport GamesLobby from './components/gamesLobby/GamesLobby'\nimport GameTable from './components/game/GameTable'\nimport LandingPage from './components/landing/LandingPage'\nimport {Router, Switch, Route} from 'react-router-dom'\nimport history from './history/history'\nimport userStore from './redux/userStore'\nimport './App.css'\n\n//Amir \nimport chat from './components/chat/chat'\n\nconst App = () => {\n  \n  if(localStorage.getItem('username')){\n    userStore.dispatch({\n      type: 'LOGIN_USER',\n      data: {\n        username: localStorage.getItem('username')\n      }\n    })\n  } \n\n  return (\n    <Router history={history}>\n      <div id=\"app\">\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/gameslobby\" exact component={GamesLobby} />\n          <Route path=\"/gameslobby/:id\" component={GameTable} />\n          <Route path=\"/chat\" component={chat} />\n        </Switch>\n        \n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}